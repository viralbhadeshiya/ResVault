/// <reference types="node" />
export declare type BinaryString = string;
export interface Binary {
    readonly len: number;
    str: BinaryString;
    chunks(size: number): Binary[];
    toNumber(): number;
    toHex(): string;
    kill(): void;
}
export declare class BinaryImpl implements Binary {
    private binaryString;
    get str(): BinaryString;
    set str(v: string);
    get len(): number;
    private constructor();
    static new(s: BinaryString): Binary;
    static unsafeNew(s: BinaryString): Binary;
    static isValidBinaryString(s: BinaryString): boolean;
    static fromBytes(bytes: Buffer): Binary;
    static fromHex(hexString: string): Binary;
    protected setUnsafeStr(v: string): void;
    chunks(size: number): Binary[];
    toNumber(): number;
    toHex(): string;
    kill(): void;
}
